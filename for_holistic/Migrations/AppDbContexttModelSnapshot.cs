// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using for_holistic;

#nullable disable

namespace for_holistic.Migrations
{
    [DbContext(typeof(AppDbContextt))]
    partial class AppDbContexttModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("for_holistic.Models.Customerr", b =>
                {
                    b.Property<int>("CustomerrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerrId"));

                    b.Property<string>("CustomerrName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("int");

                    b.HasKey("CustomerrId");

                    b.HasIndex("ShoppingCartId")
                        .IsUnique();

                    b.ToTable("customerrs");
                });

            modelBuilder.Entity("for_holistic.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustomerrId")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerrId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("for_holistic.Models.Productt", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("OrderId");

                    b.ToTable("productts");
                });

            modelBuilder.Entity("for_holistic.Models.ShoppingCart", b =>
                {
                    b.Property<int>("ShoppingCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingCartId"));

                    b.Property<int>("NumberOfItems")
                        .HasColumnType("int");

                    b.HasKey("ShoppingCartId");

                    b.ToTable("shoppingCarts");
                });

            modelBuilder.Entity("for_holistic.Models.Customerr", b =>
                {
                    b.HasOne("for_holistic.Models.ShoppingCart", "ShoppingCart")
                        .WithOne("Customerr")
                        .HasForeignKey("for_holistic.Models.Customerr", "ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("for_holistic.Models.Order", b =>
                {
                    b.HasOne("for_holistic.Models.Customerr", "Customerr")
                        .WithMany("orders")
                        .HasForeignKey("CustomerrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customerr");
                });

            modelBuilder.Entity("for_holistic.Models.Productt", b =>
                {
                    b.HasOne("for_holistic.Models.Order", "Order")
                        .WithMany("productts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("for_holistic.Models.Customerr", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("for_holistic.Models.Order", b =>
                {
                    b.Navigation("productts");
                });

            modelBuilder.Entity("for_holistic.Models.ShoppingCart", b =>
                {
                    b.Navigation("Customerr")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
